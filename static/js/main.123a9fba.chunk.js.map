{"version":3,"sources":["views/profile.jpg","views/Home.js","views/Tips.js","components/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Body","GreetingSection","Img","img","Home","src","profile","alt","href","Tips","NavContainer","nav","StyledLink","Link","Nav","to","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,qC,yvBCI3C,IAAMC,EAAYC,IAAOC,IAAV,KAITC,EAAOF,IAAOC,IAAV,KAUJE,EAAkBH,IAAOC,IAAV,KASfG,EAAMJ,IAAOK,IAAV,KAKM,SAASC,IACtB,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAKG,IAAKC,IAASC,IAAI,OACvB,gGAKF,yGAEkB,IAChB,8BACE,uBAAGC,KAAK,sBAAR,UADF,mBACgD,KAJlD,yCAMyC,IACvC,uBAAGA,KAAK,wBAAR,YAPF,IAO+C,IAC7C,uBAAGA,KAAK,kCAAR,qBARF,QAQsE,IACpE,uBAAGA,KAAK,0BAAR,qBATF,KAYA,6BAEA,0CACA,+BACE,4BACE,4BACE,uBAAGA,KAAK,oGAAR,wEAQN,yCACA,+BACE,4BACE,4BACE,uBAAGA,KAAK,mCAAR,WAEF,4BACE,uBAAGA,KAAK,qCAAR,aAEF,4BACE,uBAAGA,KAAK,+BAAR,aAIN,2BACE,wCACS,IACP,uBAAGA,KAAK,qCAAR,gC,2PCnFZ,IAAMX,EAAYC,IAAOC,IAAV,KAITC,EAAOF,IAAOC,IAAV,KA8EKU,EAtEF,WACX,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,4CACA,qUAOA,4BACE,4BACE,uBAAGD,KAAK,+DAAR,qDAIF,4BACE,uBAAGA,KAAK,iEAAR,oDAIF,4BACE,uBAAGA,KAAK,qGAAR,gDAIF,4BACE,uBAAGA,KAAK,qFAAR,+CAMJ,iDACA,4BACE,4BACE,uBAAGA,KAAK,+CAAR,+DAMJ,qHAIA,4BACE,4BACE,uBAAGA,KAAK,+EAAR,oDAIF,4BACE,uBAAGA,KAAK,yFAAR,kDAIF,4BACE,uBAAGA,KAAK,iDAAR,mC,2RCvEZ,IAAME,EAAeZ,IAAOa,IAAV,KASZC,EAAad,YAAOe,IAAPf,CAAH,KAaDgB,EATH,WACV,OACE,kBAACJ,EAAD,KACE,kBAACE,EAAD,CAAYG,GAAG,SAAf,SACA,kBAACH,EAAD,CAAYG,GAAG,SAAf,W,OCISC,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAUH,GAAG,WAEf,kBAAC,IAAD,CAAOG,KAAK,SACV,kBAACd,EAAD,OAEF,kBAAC,IAAD,CAAOc,KAAK,QAAQC,UAAWV,OCPnBW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.123a9fba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.2d5d8729.jpg\";","import React from \"react\";\nimport profile from \"./profile.jpg\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 18px;\n`;\n\nconst Body = styled.div`\n  padding: 3rem 0;\n  margin: 0 auto;\n  width: 35rem;\n\n  @media (max-width: 700px) {\n    width: 90%;\n  }\n`;\n\nconst GreetingSection = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  h1 {\n    margin-bottom: 0;\n  }\n`;\n\nconst Img = styled.img`\n  width: 15rem;\n  border-radius: 50%;\n`;\n\nexport default function Home() {\n  return (\n    <Container>\n      <Body>\n        <GreetingSection>\n          <Img src={profile} alt=\"me\" />\n          <h1>\n            üëâüèº James Royston üëàüèº\n          </h1>\n        </GreetingSection>\n\n        <p>\n          I'm a software engineer in the midwest, working on React.js\n          applications at{\" \"}\n          <span>\n            <a href=\"https://steezy.co/\">STEEZY</a> (üòç).{\" \"}\n          </span>\n          My favorite technologies right now are{\" \"}\n          <a href=\"https://reactjs.org/\">React.js</a>,{\" \"}\n          <a href=\"https://styled-components.com/\">styled components</a>, and{\" \"}\n          <a href=\"https://expressjs.com/\">Express + Node.js</a>.\n        </p>\n\n        <hr />\n\n        <p>Blog posts:</p>\n        <small>\n          <ul>\n            <li>\n              <a href=\"https://dev.to/jamesroyston/how-to-deploy-your-express-mongodb-api-react-frontend-to-heroku-4p8m\">\n                How to deploy your express-mongoDB API + React frontend to\n                Heroku\n              </a>\n            </li>\n          </ul>\n        </small>\n\n        <p>Follow me:</p>\n        <small>\n          <ul>\n            <li>\n              <a href=\"https://github.com/jamesroyston\">Github</a>\n            </li>\n            <li>\n              <a href=\"https://linkedin.com/in/jtroyston\">LinkedIn</a>\n            </li>\n            <li>\n              <a href=\"https://dev.to/jamesroyston\">Dev.to</a>\n            </li>\n          </ul>\n        </small>\n        <p>\n          <small>\n            Email:{\" \"}\n            <a href=\"mailto://jamesroyston03@gmail.com\">\n              jamesroyston03@gmail.com\n            </a>\n          </small>\n        </p>\n      </Body>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 18px;\n`;\n\nconst Body = styled.div`\n  margin: 0 auto;\n  width: 35rem;\n  @media (max-width: 700px) {\n    width: 90%;\n  }\n`;\n\nconst Tips = () => {\n  return (\n    <Container>\n      <Body>\n        <h2>Hey Dumba**.</h2>\n        <p>\n          Read these articles before talking to anybody in hiring. As a matter\n          of fact, just read these once a year to keep them fresh in your mind.\n          You'll regret it if you don't (remember that time when you read these\n          after you'd already signed an offer? Yeah, that pint of ben and\n          jerry's does too...).\n        </p>\n        <ul>\n          <li>\n            <a href=\"https://haseebq.com/how-not-to-bomb-your-offer-negotiation/\">\n              How not to bomb your offer negotiation - haseebq\n            </a>\n          </li>\n          <li>\n            <a href=\"https://haseebq.com/my-ten-rules-for-negotiating-a-job-offer/\">\n              Ten rules for negotiating a job offer - haseebq\n            </a>\n          </li>\n          <li>\n            <a href=\"https://web.archive.org/web/20180626035838/http://rob.by/2013/negotiating-your-startup-job-offer/\">\n              Negotiating your startup job offer - rob.by\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.theodinproject.com/courses/getting-hired/lessons/handling-a-job-offer\">\n              Handling a job offer - theodinproject.com\n            </a>\n          </li>\n        </ul>\n\n        <p>Watch these, also.</p>\n        <ul>\n          <li>\n            <a href=\"https://www.youtube.com/watch?v=OaEw7ZFs5sU\">\n              Never Split The Difference Summary - Chris Voss [Youtube]\n            </a>\n          </li>\n        </ul>\n\n        <p>\n          Not related to jobs- but you should read these once a year because\n          humble pie is nice.\n        </p>\n        <ul>\n          <li>\n            <a href=\"https://dev.to/emmabostian/101-tips-for-being-a-great-programmer-human-36nl\">\n              101 tips for being a great programmer and human\n            </a>\n          </li>\n          <li>\n            <a href=\"https://monicalent.com/blog/2019/06/03/absolute-truths-unlearned-as-junior-developer/\">\n              Absolute truths unlearned as junior developer\n            </a>\n          </li>\n          <li>\n            <a href=\"https://mastery.games/post/what-not-to-learn/\">\n              Deciding what not to learn\n            </a>\n          </li>\n        </ul>\n      </Body>\n    </Container>\n  );\n};\n\nexport default Tips;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst NavContainer = styled.nav`\n  display: flex;\n  padding: 1em 1em 0 1em;\n  width: 100%;\n  @media (max-width: 700px) {\n    width: 90%;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 0.5em;\n`;\n\nconst Nav = () => {\n  return (\n    <NavContainer>\n      <StyledLink to=\"/home\">/home</StyledLink>\n      <StyledLink to=\"/tips\">/tips</StyledLink>\n    </NavContainer>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./views/Home\";\nimport Tips from \"./views/Tips\";\nimport Nav from \"./components/Nav\";\nimport { HashRouter, Switch, Redirect, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Nav />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/tips\" component={Tips} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}